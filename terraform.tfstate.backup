{
  "version": 4,
  "terraform_version": "0.13.5",
  "serial": 466,
  "lineage": "22b6acf0-9c0d-8642-378e-e343b601f7aa",
  "outputs": {
    "disk_id": {
      "value": [
        "/var/lib/libvirt/images/master1.qcow2",
        "/var/lib/libvirt/images/worker1.qcow2",
        "/var/lib/libvirt/images/worker2.qcow2",
        "/var/lib/libvirt/images/worker3.qcow2",
        "/var/lib/libvirt/images/worker4.qcow2"
      ],
      "type": [
        "tuple",
        [
          "string",
          "string",
          "string",
          "string",
          "string"
        ]
      ]
    },
    "ip": {
      "value": [
        [
          "10.0.1.223"
        ],
        [
          "10.0.1.96"
        ],
        [
          "10.0.1.242"
        ],
        [
          "10.0.1.122"
        ],
        [
          "10.0.1.80"
        ]
      ],
      "type": [
        "tuple",
        [
          [
            "list",
            "string"
          ],
          [
            "list",
            "string"
          ],
          [
            "list",
            "string"
          ],
          [
            "list",
            "string"
          ],
          [
            "list",
            "string"
          ]
        ]
      ]
    },
    "network_id": {
      "value": [
        "7a8f6516-e316-4769-8924-57ee54290284"
      ],
      "type": [
        "tuple",
        [
          "string"
        ]
      ]
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "user_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "c9757a3e3459778efb374830275485a0c85247817ff7f87993f00aca73f8258d",
            "rendered": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname master1\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n",
            "template": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname ${HOSTNAME}\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n",
            "vars": {
              "HOSTNAME": "master1"
            }
          }
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "2870cbf162789b75665606c6759842f028545ef6f7ab182dc35433e730235451",
            "rendered": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname worker1\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n",
            "template": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname ${HOSTNAME}\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n",
            "vars": {
              "HOSTNAME": "worker1"
            }
          }
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "b9ab75dd6db7f8aa697ca63533e58ff83aa2a1114b06820ba5d8954a1165fbe7",
            "rendered": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname worker2\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n",
            "template": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname ${HOSTNAME}\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n",
            "vars": {
              "HOSTNAME": "worker2"
            }
          }
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "1c39d9bbe265d6f0399a605860c9c6f7af786f30d245acc0cacbea0c6dc3f1f0",
            "rendered": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname worker3\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n",
            "template": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname ${HOSTNAME}\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n",
            "vars": {
              "HOSTNAME": "worker3"
            }
          }
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "3e8cb799acf64245dd3f194660f24bdf1443c8b2b0858215dcfc2af9fea3f4f6",
            "rendered": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname worker4\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n",
            "template": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname ${HOSTNAME}\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n",
            "vars": {
              "HOSTNAME": "worker4"
            }
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_cloudinit_disk",
      "name": "commoninit",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/commoninit0.iso;5fc8f229-769c-1d1d-a666-9265cfe0cac4",
            "meta_data": "",
            "name": "commoninit0.iso",
            "network_config": "",
            "pool": "default",
            "user_data": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname master1\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "data.template_file.user_data"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/commoninit1.iso;5fc8f22a-1a36-6c55-755e-304cc5ee68d0",
            "meta_data": "",
            "name": "commoninit1.iso",
            "network_config": "",
            "pool": "default",
            "user_data": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname worker1\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "data.template_file.user_data"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/commoninit2.iso;5fc8f22a-0634-269e-1a78-30a4be6cfc09",
            "meta_data": "",
            "name": "commoninit2.iso",
            "network_config": "",
            "pool": "default",
            "user_data": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname worker2\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "data.template_file.user_data"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/commoninit3.iso;5fc8f22a-a100-76cd-8733-47d59886f0cd",
            "meta_data": "",
            "name": "commoninit3.iso",
            "network_config": "",
            "pool": "default",
            "user_data": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname worker3\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "data.template_file.user_data"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/commoninit4.iso;5fc8f22a-73c2-f3bb-286f-846c96a2dd3b",
            "meta_data": "",
            "name": "commoninit4.iso",
            "network_config": "",
            "pool": "default",
            "user_data": "#cloud-config\n# vim: syntax=yaml\n#\n# ***********************\n# \t---- for more examples look at: ------\n# ---\u003e https://cloudinit.readthedocs.io/en/latest/topics/examples.html\n# ******************************\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided.\n#\n# Note: Content strings here are truncated for example purposes.\nssh_pwauth: True\nchpasswd:\n  list: |\n     root: StrongPassword\n  expire: False\n\nusers:\n  - name: joro # Change me\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2fBgIF8CGZxOsSuTyjmgZ7+ebwzaTORz5nBjvBhNhijurm9udE3ux/Vxcg1q1kUtfWk0nfHQMjDiPs1S+mnCpusogYy3PeMf8QJkZXEC3CCGv2lQb1dNG/UHVTamDz2Aaxy5uZEz1JEUlDGMwcwXVbk28otDkQZyb6gKrBzdTIDTkJ4ytFG0PLTHaU5SXCK/35EispVwx+1rRR7Af7ll3lJ0E1eXaSyx+rLcnh3Y9dgiqo3gmJSVQAl1GLM+BUZsaFL2RfJrdf5hbOh0fEsbPWd7vMIrwpAYUK8JDgUnFhQ1VfDv1gK0FFXNy5rUn47st0UOxEKC478gnJrOj38c1 vcjouni@540 #Chageme\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']\n    shell: /bin/bash\n    groups: wheel\n\nruncmd:\n  # Set hostname\n  - hostnamectl set-hostname worker4\n  # Set ssh\n  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config\n  - systemctl restart sshd\n  # Set iscsi initiator\n  - echo \"InitiatorName=`/sbin/iscsi-iname`\" \u003e /etc/iscsi/initiatorname.iscsi\n"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "data.template_file.user_data"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_domain",
      "name": "k8s",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/commoninit0.iso;5fc8f229-769c-1d1d-a666-9265cfe0cac4",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": null,
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/master1.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": "",
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice"
              }
            ],
            "id": "85ef5dc7-79cc-4683-ab4a-9efa59b8ad51",
            "initrd": "",
            "kernel": "",
            "machine": "ubuntu",
            "memory": 4096,
            "metadata": null,
            "name": "master1",
            "network_interface": [
              {
                "addresses": [
                  "10.0.1.223"
                ],
                "bridge": "",
                "hostname": "master1",
                "mac": "52:54:00:C6:C7:7D",
                "macvtap": "",
                "network_id": "7a8f6516-e316-4769-8924-57ee54290284",
                "network_name": "vm_network",
                "passthrough": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": [],
            "qemu_agent": false,
            "running": true,
            "timeouts": null,
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.template_file.user_data",
            "libvirt_cloudinit_disk.commoninit",
            "libvirt_network.vm_network",
            "libvirt_volume.debian"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/commoninit1.iso;5fc8f22a-1a36-6c55-755e-304cc5ee68d0",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": null,
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/worker1.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": "",
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice"
              }
            ],
            "id": "378feeca-bcdd-47c0-b7f3-cba01ded77ee",
            "initrd": "",
            "kernel": "",
            "machine": "ubuntu",
            "memory": 4096,
            "metadata": null,
            "name": "worker1",
            "network_interface": [
              {
                "addresses": [
                  "10.0.1.96"
                ],
                "bridge": "",
                "hostname": "worker1",
                "mac": "52:54:00:3A:C2:35",
                "macvtap": "",
                "network_id": "7a8f6516-e316-4769-8924-57ee54290284",
                "network_name": "vm_network",
                "passthrough": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": [],
            "qemu_agent": false,
            "running": true,
            "timeouts": null,
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.template_file.user_data",
            "libvirt_cloudinit_disk.commoninit",
            "libvirt_network.vm_network",
            "libvirt_volume.debian"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/commoninit2.iso;5fc8f22a-0634-269e-1a78-30a4be6cfc09",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": null,
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/worker2.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": "",
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice"
              }
            ],
            "id": "3ac292e4-9656-4764-83ae-6a0dde535b18",
            "initrd": "",
            "kernel": "",
            "machine": "ubuntu",
            "memory": 4096,
            "metadata": null,
            "name": "worker2",
            "network_interface": [
              {
                "addresses": [
                  "10.0.1.242"
                ],
                "bridge": "",
                "hostname": "worker2",
                "mac": "52:54:00:D2:B0:13",
                "macvtap": "",
                "network_id": "7a8f6516-e316-4769-8924-57ee54290284",
                "network_name": "vm_network",
                "passthrough": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": [],
            "qemu_agent": false,
            "running": true,
            "timeouts": null,
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.template_file.user_data",
            "libvirt_cloudinit_disk.commoninit",
            "libvirt_network.vm_network",
            "libvirt_volume.debian"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/commoninit3.iso;5fc8f22a-a100-76cd-8733-47d59886f0cd",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": null,
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/worker3.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": "",
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice"
              }
            ],
            "id": "eb814468-312a-4f7c-b945-f10a8d159301",
            "initrd": "",
            "kernel": "",
            "machine": "ubuntu",
            "memory": 4096,
            "metadata": null,
            "name": "worker3",
            "network_interface": [
              {
                "addresses": [
                  "10.0.1.122"
                ],
                "bridge": "",
                "hostname": "worker3",
                "mac": "52:54:00:76:F2:73",
                "macvtap": "",
                "network_id": "7a8f6516-e316-4769-8924-57ee54290284",
                "network_name": "vm_network",
                "passthrough": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": [],
            "qemu_agent": false,
            "running": true,
            "timeouts": null,
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.template_file.user_data",
            "libvirt_cloudinit_disk.commoninit",
            "libvirt_network.vm_network",
            "libvirt_volume.debian"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/commoninit4.iso;5fc8f22a-73c2-f3bb-286f-846c96a2dd3b",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": null,
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/worker4.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": "",
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice"
              }
            ],
            "id": "2ad5d8a5-dcef-4204-ba38-edcca02e8b53",
            "initrd": "",
            "kernel": "",
            "machine": "ubuntu",
            "memory": 4096,
            "metadata": null,
            "name": "worker4",
            "network_interface": [
              {
                "addresses": [
                  "10.0.1.80"
                ],
                "bridge": "",
                "hostname": "worker4",
                "mac": "52:54:00:DA:22:7B",
                "macvtap": "",
                "network_id": "7a8f6516-e316-4769-8924-57ee54290284",
                "network_name": "vm_network",
                "passthrough": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": [],
            "qemu_agent": false,
            "running": true,
            "timeouts": null,
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.template_file.user_data",
            "libvirt_cloudinit_disk.commoninit",
            "libvirt_network.vm_network",
            "libvirt_volume.debian"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_network",
      "name": "vm_network",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "addresses": [
              "10.0.1.0/24"
            ],
            "autostart": false,
            "bridge": "virbr1",
            "dhcp": [
              {
                "enabled": true
              }
            ],
            "dns": [
              {
                "enabled": true,
                "forwarders": [],
                "hosts": [],
                "local_only": false,
                "srvs": []
              }
            ],
            "domain": null,
            "id": "7a8f6516-e316-4769-8924-57ee54290284",
            "mode": "nat",
            "mtu": null,
            "name": "vm_network",
            "routes": [],
            "xml": []
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "debian",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": null,
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/master1.qcow2",
            "name": "master1.qcow2",
            "pool": "default",
            "size": 2147483648,
            "source": "https://laotzu.ftp.acc.umu.se/cdimage/openstack/current/debian-10.6.2-20201124-openstack-amd64.qcow2",
            "xml": []
          },
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": null,
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/worker1.qcow2",
            "name": "worker1.qcow2",
            "pool": "default",
            "size": 2147483648,
            "source": "https://laotzu.ftp.acc.umu.se/cdimage/openstack/current/debian-10.6.2-20201124-openstack-amd64.qcow2",
            "xml": []
          },
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": null,
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/worker2.qcow2",
            "name": "worker2.qcow2",
            "pool": "default",
            "size": 2147483648,
            "source": "https://laotzu.ftp.acc.umu.se/cdimage/openstack/current/debian-10.6.2-20201124-openstack-amd64.qcow2",
            "xml": []
          },
          "private": "bnVsbA=="
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": null,
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/worker3.qcow2",
            "name": "worker3.qcow2",
            "pool": "default",
            "size": 2147483648,
            "source": "https://laotzu.ftp.acc.umu.se/cdimage/openstack/current/debian-10.6.2-20201124-openstack-amd64.qcow2",
            "xml": []
          },
          "private": "bnVsbA=="
        },
        {
          "index_key": 4,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": null,
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/worker4.qcow2",
            "name": "worker4.qcow2",
            "pool": "default",
            "size": 2147483648,
            "source": "https://laotzu.ftp.acc.umu.se/cdimage/openstack/current/debian-10.6.2-20201124-openstack-amd64.qcow2",
            "xml": []
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "ansiblecfg",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "[defaults]\ninventory           = ./inventory\nlog_path            = ./ansible.log\ngathering           = smart\ncollections_paths   = ./collections\n\n[inventory]\nenable_plugins = ini\n\n[privilege_escalation]\nbecome=True\nbecome_method=sudo\nbecome_user=root\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0664",
            "filename": "ansible.cfg",
            "id": "22f455398b4bed5e2d87cddde060ca622432858d",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "group_vars",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "---\n# Common variables\nansible_python_interpreter: /usr/bin/python3\nansible_user: joro\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0664",
            "filename": "./inventory/group_vars/all",
            "id": "ab8f707f0d6e3dfa164b0b27bc36c41c607dc2ed",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "inventory",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "[kube] \n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0664",
            "filename": "./inventory/hosts",
            "id": "5ccca8fd1453bc06497283b71767f2ec73ac60b7",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
